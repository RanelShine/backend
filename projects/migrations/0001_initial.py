# Generated by Django 5.0.2 on 2025-06-02 11:43

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('communes', '0003_commune_latitude_commune_longitude'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Titre du projet')),
                ('description', models.TextField(verbose_name='Description détaillée')),
                ('status', models.CharField(choices=[('PLANNED', 'Planifié'), ('IN_PROGRESS', 'En cours'), ('COMPLETED', 'Terminé'), ('SUSPENDED', 'Suspendu')], default='PLANNED', max_length=20, verbose_name='État du projet')),
                ('start_date', models.DateField(blank=True, null=True, verbose_name='Date de début')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='Date de fin prévue')),
                ('budget', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Budget alloué')),
                ('avancement', models.PositiveIntegerField(default=0, help_text="Pourcentage d'avancement du projet (0–100).", verbose_name='Avancement (%)')),
                ('image', models.ImageField(blank=True, null=True, upload_to='projects/', verbose_name='Image du projet')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Dernière modification')),
                ('commune', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='projects', to='communes.commune', verbose_name='Commune')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_projects', to=settings.AUTH_USER_MODEL, verbose_name='Créé par')),
            ],
            options={
                'verbose_name': 'Projet',
                'verbose_name_plural': 'Projets',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Accountability',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.TextField(verbose_name='Question/Demande')),
                ('response', models.TextField(blank=True, null=True, verbose_name='Réponse')),
                ('status', models.CharField(choices=[('PENDING', 'En attente'), ('ANSWERED', 'Répondu'), ('CLOSED', 'Clôturé')], default='PENDING', max_length=20, verbose_name='État de la demande')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date de soumission')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Dernière modification')),
                ('responded_at', models.DateTimeField(blank=True, null=True, verbose_name='Date de réponse')),
                ('citizen', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='accountability_requests', to=settings.AUTH_USER_MODEL, verbose_name='Citoyen')),
                ('responded_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='accountability_responses', to=settings.AUTH_USER_MODEL, verbose_name='Répondu par')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='accountability_requests', to='projects.project', verbose_name='Projet concerné')),
            ],
            options={
                'verbose_name': 'Demande de compte',
                'verbose_name_plural': 'Demandes de comptes',
                'ordering': ['-created_at'],
            },
        ),
    ]
